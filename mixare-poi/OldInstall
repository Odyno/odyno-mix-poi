|
|	Mixare POI
|	Licensed: GPLv3
|	
|	Installation Guide for Version 1.0
|
---------------------------------------------


// Basic installation

After you have downloaded the Mixare POI Plugin for Wordpress, you can go to your Wordpress backend (wp-admin).
Create two  Pages, one for your all the public Maps, the so called "Mixes" and one for the private Mixes of each user.
You can read of these two pages later.

In the Plugin Menu open the installed Plugins (Plugins->Installed Plugins), and activate the Plugin.
Now you can find a new Menu in the Tools section, called Mixare POI. Here is where mostly the configurations take place.

You can set the places where you want to make the Maps viewable in the first two sections:
 - Page where you want to see all your public maps
 - Page where you want to have the Google map
The first section displays all of the maps, that are public. The second section displays each users own maps.
Set here the Page-Title and the full link to this Page.

The third section defines which Login-type should be used. The Mixare-Login is standartized. If you are already using a Login Plugin on your Page,
select "use a other Login Plugin".

For the basic installation you have to go to the Widgets (Appearance->Widgets). If you have choosen the Mixare Login before, you should find the Mixare POI Widget.
Drag it to your sidebar and fill out the two textboxes (Title before and after Login).

If you have finished these simple steps, you are ready to use the "Mixare POI" Wordpress Plugin.

---------------------------------------------


// Extended installation
//
// -> Be careful with this options, don't change them if you are in doubt !!!

You can get more Plugin options by clicking on the "Show extended options" link in the Mixare POI-Menu (Tools->Mixare POI).

Continuing with the third section, the "Display Widget on Login Page" option defines, whether the Sidebar-Login should be displayed at the Login Page or not.
-> Ex. You have defined the user specific maps on the page: http://www.example.com/my-maps/. If the user is not logged in, but tries to open that page,
   he will see the Login Page, where he gets also the "registration" and the "forgot password" page.
   By defining, that the Widget should not be displayed on the Login page, that exact page has not two Logins on one screen.

In the fourth section you can set some options about the Wordpress backend. Cancelling the "Show administration bar to normal User" option, hides the standard Wordpress bar,
that you can see if you are logged in, for all non-Administrators.
The "Allow access to "wp-admin" (for subscribers)" option blocks all logged in subscribers if they try to get to the Backend. They will be redirected to the Home Page.
Afterwards we have the "Allow access to "wp-login.php" (ex. at wrong Password)" option. It defines whether a User who wants to Log in will be able to do this at the "wp-login.php" Page.
They will also be redirected if they type in the wrong Password and get an Error about that (redirected to the Login, the Registration or the Forgot Password Page).

The fifth section is used for options about the Page that prints all the Data, saved by the Google Map. Firstly you can set your own Mimetype (standard: text/plain).
In the second option you are able to change the Link to that exact file. If you click on "Create a external output File", you are able to export this function to a other Domain:
-> Ex. Changing www.mixare.org -> www.mixa.re (to make the Domain a little shorter).
Copy the content into a new PHP-File. Change the Mimetype, the "$table_prefix"-function and the PDO DSN-String manually (because this Script has no more connection to the Wordpress Functions).
You will find these places marked by a comment saying: !!! NOTE.
Now you are ready to upload the file on the new Host.
Finally you have to change the Link of the Script on you Wordpress Backend in the fifth section, called "File link -> to the output". Your script should now Work fine.

---------------------------------------------


// Installation help
//
// -> contact the Plugin Autor, iif you can't find enough help here.

PDO DSN:
The PDO is a standartized PHP class, since PHP 5.1.0 .
The DSN is used for the connection to the different Databases.
For MySQL it would look like this: $wpdb = new PDO("mysql:dbname=myDB;host=localhost", "root", "thepassword");
You will get more information here: http://php.net/manual/de/book.pdo.php
